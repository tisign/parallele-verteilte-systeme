services:
  mongo1:
    container_name: mongo1
    image: mongo:7.0
    ports:
      - 27017:27017
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 0s
    volumes:
      - ./mongo1_data:/data/db
      - ./mongo1_config:/data/configdb

  mongo2:
    container_name: mongo2
    image: mongo:7.0
    ports:
      - 27018:27018
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./mongo2_data:/data/db
      - ./mongo2_config:/data/configdb
  mongo3:
    container_name: mongo3
    image: mongo:7.0
    ports:
      - 27019:27019
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./mongo3_data:/data/db
      - ./mongo3_config:/data/configdb

  rabbitmq:
    image: rabbitmq:3.13.7-management
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - rabbitmq.env

  stock-publisher:
    build:
      context: ./stock-publisher
      dockerfile: Dockerfile
    container_name: stock-publisher
    restart: always
    environment:
      RABBITMQ_URL: amqp://stockmarket:12345678@rabbitmq:5672/

    depends_on:
      - rabbitmq

  rabbitmq-subscriber-1:
    build:
      context: ./rabbitmq-subscriber
      dockerfile: Dockerfile
    container_name: rabbitmq-subscriber-1
    restart: always
    environment:
      RABBITMQ_QUEUE: AAPL
    env_file:
      - rabbitmq-subscriber.env
    depends_on:
      - rabbitmq
      - mongo1
      - mongo2
      - mongo3

  rabbitmq-subscriber-2:
    build:
      context: ./rabbitmq-subscriber
      dockerfile: Dockerfile
    container_name: rabbitmq-subscriber-2
    restart: always
    environment:
      RABBITMQ_QUEUE: MSFT
    env_file:
      - rabbitmq-subscriber.env
    depends_on:
      - rabbitmq
      - mongo1
      - mongo2
      - mongo3
  
  rabbitmq-subscriber-3:
    build:
      context: ./rabbitmq-subscriber
      dockerfile: Dockerfile
    container_name: rabbitmq-subscriber-3
    restart: always
    environment:
      RABBITMQ_QUEUE: TSLA
    env_file:
      - rabbitmq-subscriber.env
    depends_on:
      - rabbitmq
      - mongo1
      - mongo2
      - mongo3

  stock-liveview:
    build:
      context: ./stock-liveview
      dockerfile: Dockerfile
    container_name: stock-liveview
    ports:
      - 3000:3000
    restart: always
    environment:
      MONGODB_URL: mongodb://mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0
      MONGODB_DB: stockdb
    depends_on:
      - mongo1
      - mongo2
      - mongo3